knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, message = FALSE, error = FALSE)
AccaData<- read.csv("Results.csv") #import data
AccaData$Date<- as.Date(AccaData$Date, format = "%d/%m/%Y") #format date properly
AccaData$Odds<- as.numeric(format(AccaData$Odds, digits = 3))
#AccaData$Win<- as.factor(AccaData$Win) #wanted to make this a factor but the summary uses sum() which only works on numeric data
AccaData$HomeAway<- as.factor(AccaData$HomeAway)
library(tidyverse)
#AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Date), stat = "identity") + geom_smooth(aes(y = Odds/70), stat = "identity") + theme_classic() + theme(legend.position = "none") + labs(title = "Weekly tracker", subtitle = "Bars for Wins (left axis), line for Total Odds (right axis)") + scale_y_continuous(breaks = 1:11, sec.axis = sec_axis(name = "Odds", transform = ~.*70)) #get summary of each acca. this plot adds a second axis and plots a line for odds. I prefer the second plot for simplicity of figure and code
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
#best way to present a lot of the data will be as a table
library(kableExtra)
PlayerSummary<- AccaData %>% group_by(Player) %>% summarise(PercentWin = format(sum(Win)/length(Win)*100, digits = 2),
Mean = format(mean(Odds), digits = 3),
Min = format(min(Odds), digits = 3),
Max = format(max(Odds), digits = 3),
PercentHome = format(sum(HomeAway == "H")/length(HomeAway)*100, digits = 2),
FavouriteTeam = paste0(names(which.max(table(Team))), " (",table(Team)[which.max(table(Team))], ")"),
HatedTeam = paste0(names(which.max(table(Against))), " (",table(Against)[which.max(table(Against))], ")"))
PlayerSummary<- PlayerSummary[order(as.numeric(PlayerSummary$PercentWin), decreasing = TRUE),] #order by win%
PlayerSummary %>% kbl(caption = "For Favourite and Hated teams, number of times picked is shown in brackets. If there is tie, the team first alphabetically is shown.") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(3, background = spec_color(as.numeric(PlayerSummary$Mean), option = "plasma")) %>% column_spec(4, background = spec_color(as.numeric(PlayerSummary$Min), option = "C")) %>% column_spec(5, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(3:5, bold = FALSE, color = "green")
#make a line plot of everyone's bet odds week by week
plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none"))
PlayerSummary
which.min(PlayerSummary$Mean)
PlayerSummary$Player[which.min(PlayerSummary$Mean)]
PlayerSummary$Player[which.min(PlayerSummary$Max - PlayerSummary$Min)]
PlayerSummary$Max - PlayerSummary$Min
PlayerSummary$Max
PlayerSummary$Player[which.min(as.numeric(PlayerSummary$Max) - as.numeric(PlayerSummary$Min))]
PlayerSummary %>% kbl(caption = "For Favourite and Hated teams, number of times picked is shown in brackets. If there is tie, the team first alphabetically is shown.") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(3, background = spec_color(as.numeric(PlayerSummary$Mean), option = "plasma")) %>% column_spec(4, background = spec_color(as.numeric(PlayerSummary$Min), option = "C")) %>% column_spec(5, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(3:5, bold = FALSE, color = "green")
PlayerSummary$Player[which.max(as.numeric(PlayerSummary$Max) - as.numeric(PlayerSummary$Min))] #stay in your lane!
cor(x = AccaData$Win, y = AccaData$Odds)
cor(x = AccaData$Odds, y = AccaData$Odds) #correlation between odds and outcome. negative value means that the lower the odds
cor(x = AccaData$Odds, y = AccaData$Win) #correlation between odds and outcome. negative value means that the lower the odds
install.packages("pROC")
library(pROC)
AccaModel<- lm(Win ~ Odds + HomeAway + Player, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
drop1(AccaModel)
AccaModel<- glm(Win ~ Odds + HomeAway + Player, data = AccaData) #regression using odds and homeaway as predictors of win
drop1(AccaModel)
summary(AccaModel)
AccaModel<- lm(Win ~ Odds + HomeAway + Player, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
AccaModel$y)
AccaModel$y
AccaModel<- glm(Win ~ Odds + HomeAway + Player, data = AccaData) #regression using odds and homeaway as predictors of win
AccaModel$y
plot(roc(AccaModel$y, predict(AccaModel)))
AccaModel<- glm(Win ~ Odds, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
plot(roc(AccaModel$y, predict(AccaModel)))
AccaModel<- glm(Win ~ Player, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
plot(roc(AccaModel$y, predict(AccaModel)))
#Multiple ROC curves. One for players, one for home/away, one for stratified odds?
cor(x = AccaData$Odds, y = AccaData$Win) #correlation between odds and outcome. negative value means that the lower the odds, the more likely a win (which is what would be expected).
library(pROC)
AccaModel<- glm(Win ~ Odds + HomeAway + Player, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
plot(roc(AccaModel$y, predict(AccaModel)))
plot(roc(AccaModel$y, predict(AccaModel, type = "response")))
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response")))
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + theme_classic()
ggroc(roc(AccaModel$y, predict.glm(AccaModel, type = "response"))) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_hline(yintercept = 0, linetype = 2) theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_hline(yintercept = 0, linetype = 2) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_hline(yintercept = 0, slope = 1, linetype = 2) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(yintercept = 0, slope = 1, linetype = 2) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = 0, slope = 1, linetype = 2) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = c(0,1), slope = 1, linetype = 2) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = c(0,1), linetype = 2) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = 0, linetype = 2) + theme_classic()
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic()
glm(Win ~ Player, data = AccaData)
AccaModel<- glm(Win ~ Player, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
multiclass.roc(AccaModel$y, predict(AccaModel, type = "response"))
multiclass.roc(AccaModel$y, predict(AccaModel, type = "response"), levels = unique(AccaData$Player))
AccaModel$control
AccaModel$model
AccaModel$R
AccaModel$family
AccaModel$residuals
AccaModel$xlevels
multiclass.roc(AccaModel$y, predict(AccaModel, type = "response"), levels = AccaModel$xlevels
)
AccaModel<- glm(Win ~ Odds + HomeAway, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
AccaModel<- glm(Win ~ Odds + HomeAway + Player, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
AccaModel<- glm(Win ~ HomeAway + Player, data = AccaData) #regression using odds and homeaway as predictors of win
summary(AccaModel)
ggroc(roc(AccaModel$y, predict(AccaModel, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds + HomeAway + Player, data = AccaData, subset = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
unique(AccaData$Player)
AccaData[which(AccaData$Player == x),]
AccaData[which(AccaData$Player == "Doug"),]
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds + HomeAway + Player, AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds + HomeAway, data = AccaData, subset = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds + HomeAway, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
glm(Win ~ Odds + HomeAway, data = AccaData[which(AccaData$Player == "Doug"),])
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds + HomeAway, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
unique(AccaData$Player)
lapply(unique(AccaData$Player), function(x) AccaData[which(AccaData$Player == x),])
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds + HomeAway, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
AccaModel<- lapply(unique(AccaData$Player), function(x) lm(Win ~ Odds + HomeAway, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
summary(AccaModel)
summary(AccaModel[[1]])
ggroc(roc(AccaModel[[1]][["y"]], predict(AccaModel[[1]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
for player in AccaModel{
for(player in AccaModel){
ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
}
for(player in AccaModel){
print(player)
#ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
}
for(player in AccaModel){
print(player)
ggroc(roc(player$y, predict(player, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() #ROC curve for model
}
for(player in AccaModel){
#print(player)
print(ggroc(roc(player$y, predict(player, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic()) #ROC curve for model
}
names(AccaModel)<- unique(AccaData$Player)
for(player in AccaModel){
#print(player)
print(ggroc(roc(player$y, predict(player, type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() + labs(title = paste(player))) #ROC curve for model
}
for(player in names(AccaModel)){
#print(player)
print(ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() + labs(title = paste(player))) #ROC curve for model
}
AccaModel
lapply(unique(AccaData$Player), function(x) AccaData[which(AccaData$Player == x),])
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, message = FALSE, error = FALSE)
AccaData<- read.csv("Results.csv") #import data
AccaData$Date<- as.Date(AccaData$Date, format = "%d/%m/%Y") #format date properly
AccaData$Odds<- as.numeric(format(AccaData$Odds, digits = 3))
#AccaData$Win<- as.factor(AccaData$Win) #wanted to make this a factor but the summary uses sum() which only works on numeric data
AccaData$HomeAway<- as.factor(AccaData$HomeAway)
library(tidyverse)
#AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Date), stat = "identity") + geom_smooth(aes(y = Odds/70), stat = "identity") + theme_classic() + theme(legend.position = "none") + labs(title = "Weekly tracker", subtitle = "Bars for Wins (left axis), line for Total Odds (right axis)") + scale_y_continuous(breaks = 1:11, sec.axis = sec_axis(name = "Odds", transform = ~.*70)) #get summary of each acca. this plot adds a second axis and plots a line for odds. I prefer the second plot for simplicity of figure and code
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
#best way to present a lot of the data will be as a table
library(kableExtra)
PlayerSummary<- AccaData %>% group_by(Player) %>% summarise(PercentWin = format(sum(Win)/length(Win)*100, digits = 2),
Mean = format(mean(Odds), digits = 3),
Median = format(median(Odds), digits = 3),
Min = format(min(Odds), digits = 3),
Max = format(max(Odds), digits = 3),
PercentHome = format(sum(HomeAway == "H")/length(HomeAway)*100, digits = 2),
FavouriteTeam = paste0(names(which.max(table(Team))), " (",table(Team)[which.max(table(Team))], ")"),
HatedTeam = paste0(names(which.max(table(Against))), " (",table(Against)[which.max(table(Against))], ")"))
PlayerSummary<- PlayerSummary[order(as.numeric(PlayerSummary$PercentWin), decreasing = TRUE),] #order by win%
PlayerSummary %>% kbl(caption = "For Favourite and Hated teams, number of times picked is shown in brackets. If there is tie, the team first alphabetically is shown.") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(3, background = spec_color(as.numeric(PlayerSummary$Mean), option = "plasma")) %>% column_spec(4, background = spec_color(as.numeric(PlayerSummary$Min), option = "C")) %>% column_spec(5, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(6, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(3:6, bold = FALSE, color = "lightgreen")
#make a line plot of everyone's bet odds week by week
plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none"))
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=Odds),position="stack",vjust=1) + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=Odds),vjust=1) + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=Odds, y = Wins),vjust=1) + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=Odds, y = Wins),vjust=0) + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=ceiling(Odds), y = Wins),vjust=0) + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=ceiling(Odds), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=ceiling(Odds), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total odds shown above bar and represented by colour") + scale_y_continuous(breaks = 1:11) #get summary of each acca
11*87
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=ceiling(Odds), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total odds shown above bar and represented by colour (bet365 boost odds so the odds may not reflect actual return)") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=ceiling(Odds), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total odds shown above bar/represented by colour (bet365 boost odds so the odds may not reflect actual return)") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=ceiling(Odds), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total odds shown above bar/represented by colour", caption = "bet365 boost odds so the odds shown may not reflect actual return") + scale_y_continuous(breaks = 1:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Odds), stat = "identity") + geom_text(aes(label=ceiling(Odds), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total odds shown above bar", caption = "bet365 boost odds so the odds shown may not reflect actual return") + scale_y_continuous(breaks = 1:11) #get summary of each acca
#Multiple ROC curves. One for players, one for home/away, one for stratified odds?
#having difficulty with this. I'm not sure the curves are exactly what I am expecting to show
#this could be an alternative: https://cran.r-project.org/web/packages/COINr/vignettes/sensitivity.html
cor(x = AccaData$Odds, y = AccaData$Win) #correlation between odds and outcome. negative value means that the lower the odds, the more likely a win (which is what would be expected).
library(pROC)
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
names(AccaModel)<- unique(AccaData$Player)
for(player in names(AccaModel)){
#print(player)
print(ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() + labs(title = paste(player))) #ROC curve for model
}
AccaModel
#Multiple ROC curves. One for players, one for home/away, one for stratified odds?
#having difficulty with this. I'm not sure the curves are exactly what I am expecting to show
#this could be an alternative: https://cran.r-project.org/web/packages/COINr/vignettes/sensitivity.html
cor(x = AccaData$Odds, y = AccaData$Win) #correlation between odds and outcome. negative value means that the lower the odds, the more likely a win (which is what would be expected).
library(pROC)
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
names(AccaModel)<- unique(AccaData$Player)
for(player in names(AccaModel)){
#print(player)
print(ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() + labs(title = paste(player))) #ROC curve for model
}
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, message = FALSE, error = FALSE)
library(tidyverse)
#AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Date), stat = "identity") + geom_smooth(aes(y = Odds/70), stat = "identity") + theme_classic() + theme(legend.position = "none") + labs(title = "Weekly tracker", subtitle = "Bars for Wins (left axis), line for Total Odds (right axis)") + scale_y_continuous(breaks = 1:11, sec.axis = sec_axis(name = "Odds", transform = ~.*70)) #get summary of each acca. this plot adds a second axis and plots a line for odds. I prefer the second plot for simplicity of figure and code
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) #get summary of each acca
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, message = FALSE, error = FALSE)
AccaData<- read.csv("Results.csv") #import data
AccaData$Date<- as.Date(AccaData$Date, format = "%d/%m/%Y") #format date properly
AccaData$Odds<- as.numeric(format(AccaData$Odds, digits = 3))
#AccaData$Win<- as.factor(AccaData$Win) #wanted to make this a factor but the summary uses sum() which only works on numeric data
AccaData$HomeAway<- as.factor(AccaData$HomeAway)
library(tidyverse)
#AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Date), stat = "identity") + geom_smooth(aes(y = Odds/70), stat = "identity") + theme_classic() + theme(legend.position = "none") + labs(title = "Weekly tracker", subtitle = "Bars for Wins (left axis), line for Total Odds (right axis)") + scale_y_continuous(breaks = 1:11, sec.axis = sec_axis(name = "Odds", transform = ~.*70)) #get summary of each acca. this plot adds a second axis and plots a line for odds. I prefer the second plot for simplicity of figure and code
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_bw() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_linedraw() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_light() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_minimal() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_light() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_light() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) + theme(panel.grid.major.y = element_line()) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_light() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) + theme(panel.grid.major.y = element_line(linetype = 2)) #get summary of each acca
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) + theme(panel.grid.major.y = element_line(linetype = 2)) #get summary of each acca
#best way to present a lot of the data will be as a table
library(kableExtra)
PlayerSummary<- AccaData %>% group_by(Player) %>% summarise(PercentWin = format(sum(Win)/length(Win)*100, digits = 2),
Mean = format(mean(Odds), digits = 3),
Median = format(median(Odds), digits = 3),
Min = format(min(Odds), digits = 3),
Max = format(max(Odds), digits = 3),
PercentHome = format(sum(HomeAway == "H")/length(HomeAway)*100, digits = 2),
DifferentTeams = length(unique(Team)),
FavouriteTeam = paste0(names(which.max(table(Team))), " (",table(Team)[which.max(table(Team))], ")"),
HatedTeam = paste0(names(which.max(table(Against))), " (",table(Against)[which.max(table(Against))], ")"))
#PlayerSummary<- cbind(PlayerSummary, Consistency = as.numeric(PlayerSummary$Min)/as.numeric(PlayerSummary$Max)
PlayerSummary<- PlayerSummary[order(as.numeric(PlayerSummary$PercentWin), decreasing = TRUE),] #order by win%
PlayerSummary %>% kbl(caption = "For Favourite and Hated teams, number of times picked is shown in brackets. If there is tie, the team first alphabetically is shown.") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(3, background = spec_color(as.numeric(PlayerSummary$Mean), option = "plasma")) %>% column_spec(4, background = spec_color(as.numeric(PlayerSummary$Median), option = "C")) %>% column_spec(5, background = spec_color(as.numeric(PlayerSummary$Min), option = "C")) %>% column_spec(6, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(3:6, bold = FALSE, color = "lightgreen")
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, message = FALSE, error = FALSE)
AccaData<- read.csv("Results.csv") #import data
AccaData$Date<- as.Date(AccaData$Date, format = "%d/%m/%Y") #format date properly
AccaData$Odds<- as.numeric(format(AccaData$Odds, digits = 3))
#AccaData$Win<- as.factor(AccaData$Win) #wanted to make this a factor but the summary uses sum() which only works on numeric data
AccaData$HomeAway<- as.factor(AccaData$HomeAway)
library(tidyverse)
#AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Date), stat = "identity") + geom_smooth(aes(y = Odds/70), stat = "identity") + theme_classic() + theme(legend.position = "none") + labs(title = "Weekly tracker", subtitle = "Bars for Wins (left axis), line for Total Odds (right axis)") + scale_y_continuous(breaks = 1:11, sec.axis = sec_axis(name = "Odds", transform = ~.*70)) #get summary of each acca. this plot adds a second axis and plots a line for odds. I prefer the second plot for simplicity of figure and code
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) + theme(panel.grid.major.y = element_line(linetype = 2)) #get summary of each acca
#best way to present a lot of the data will be as a table
library(kableExtra)
PlayerSummary<- AccaData %>% group_by(Player) %>% summarise(PercentWin = format(sum(Win)/length(Win)*100, digits = 2),
Mean = format(mean(Odds), digits = 3),
Median = format(median(Odds), digits = 3),
Min = format(min(Odds), digits = 3),
Max = format(max(Odds), digits = 3),
PercentHome = format(sum(HomeAway == "H")/length(HomeAway)*100, digits = 2),
DifferentTeams = length(unique(Team)),
FavouriteTeam = paste0(names(which.max(table(Team))), " (",table(Team)[which.max(table(Team))], ")"),
HatedTeam = paste0(names(which.max(table(Against))), " (",table(Against)[which.max(table(Against))], ")"))
#PlayerSummary<- cbind(PlayerSummary, Consistency = as.numeric(PlayerSummary$Min)/as.numeric(PlayerSummary$Max)
PlayerSummary<- PlayerSummary[order(as.numeric(PlayerSummary$PercentWin), decreasing = TRUE),] #order by win%
PlayerSummary %>% kbl(caption = "For Favourite and Hated teams, number of times picked is shown in brackets. If there is tie, the team first alphabetically is shown.") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(3, background = spec_color(as.numeric(PlayerSummary$Mean), option = "plasma")) %>% column_spec(4, background = spec_color(as.numeric(PlayerSummary$Median), option = "C")) %>% column_spec(5, background = spec_color(as.numeric(PlayerSummary$Min), option = "C")) %>% column_spec(6, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(3:6, bold = FALSE, color = "lightgreen")
#make a line plot of everyone's bet odds week by week
plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none"))
ggplot(data = AccaData, aes(x = Date, y = Win, fill = HomeAway)) + geom_bar(stat = "identity") + theme_classic() + labs(title = "Home/Away tracker") + scale_y_continuous(breaks = 1:11) #bar plot showing split of home or away picks for winning bets
#summary(lm(Win ~ Odds + HomeAway, data = AccaData)) #regression using odds and homeaway as predictors of win
ggplot(data = AccaData) + geom_histogram(aes(x = Odds, group = Win, fill = as.factor(Win)), binwidth = 0.1) + theme_classic() + labs(title = "Histogram of bets made at different odds", fill = "Win") + theme(legend.position = "inside", legend.position.inside = c(0.9,0.9)) + scale_fill_brewer(palette = "Dark2", direction = -1) #histogram showing success of bets at different odds. I think this plot could be a nice way of showing the sweet spot of odds
Tally<- AccaData[AccaData$Win == 1,] %>% group_by(Player) %>% summarise(Total = sum(Odds)) %>% mutate(Winnings = Total - length(unique(AccaData$Date)))# %>% select(-2)
Tally<- Tally[order(as.numeric(Tally$Winnings), decreasing = TRUE),] #order by win%
#Tally$Winnings <- paste0("\u00A3", Tally$Winnings) #trying to add £ for nice readability but caused issues
Tally[-2] %>% kbl(caption = "What if you went it alone?", align = "lc", table.attr = "style='width:30%;'") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(2, color = "white", background = ifelse(Tally$Winnings < 0, "red", "green"))
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, message = FALSE, error = FALSE)
AccaData<- read.csv("Results.csv") #import data
AccaData$Date<- as.Date(AccaData$Date, format = "%d/%m/%Y") #format date properly
AccaData$Odds<- as.numeric(format(AccaData$Odds, digits = 3))
#AccaData$Win<- as.factor(AccaData$Win) #wanted to make this a factor but the summary uses sum() which only works on numeric data
AccaData$HomeAway<- as.factor(AccaData$HomeAway)
library(tidyverse)
#AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Date), stat = "identity") + geom_smooth(aes(y = Odds/70), stat = "identity") + theme_classic() + theme(legend.position = "none") + labs(title = "Weekly tracker", subtitle = "Bars for Wins (left axis), line for Total Odds (right axis)") + scale_y_continuous(breaks = 1:11, sec.axis = sec_axis(name = "Odds", transform = ~.*70)) #get summary of each acca. this plot adds a second axis and plots a line for odds. I prefer the second plot for simplicity of figure and code
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) + theme(panel.grid.major.y = element_line(linetype = 2)) #get summary of each acca
ggplot(data = AccaData, aes(x = Date, y = Win, fill = HomeAway)) + geom_bar(stat = "identity") + theme_classic() + labs(title = "Home/Away tracker") + scale_y_continuous(breaks = 1:11) #bar plot showing split of home or away picks for winning bets
#summary(lm(Win ~ Odds + HomeAway, data = AccaData)) #regression using odds and homeaway as predictors of win
ggplot(data = AccaData) + geom_histogram(aes(x = Odds, group = Win, fill = as.factor(Win)), binwidth = 0.1) + theme_classic() + labs(title = "Histogram of bets made at different odds", fill = "Win") + theme(legend.position = "inside", legend.position.inside = c(0.9,0.9)) + scale_fill_brewer(palette = "Dark2", direction = -1) #histogram showing success of bets at different odds. I think this plot could be a nice way of showing the sweet spot of odds
#best way to present a lot of the data will be as a table
library(kableExtra)
PlayerSummary<- AccaData %>% group_by(Player) %>% summarise(PercentWin = format(sum(Win)/length(Win)*100, digits = 2),
Mean = format(mean(Odds), digits = 3),
Median = format(median(Odds), digits = 3),
Min = format(min(Odds), digits = 3),
Max = format(max(Odds), digits = 3),
PercentHome = format(sum(HomeAway == "H")/length(HomeAway)*100, digits = 2),
DifferentTeams = length(unique(Team)),
FavouriteTeam = paste0(names(which.max(table(Team))), " (",table(Team)[which.max(table(Team))], ")"),
HatedTeam = paste0(names(which.max(table(Against))), " (",table(Against)[which.max(table(Against))], ")"))
#PlayerSummary<- cbind(PlayerSummary, Consistency = as.numeric(PlayerSummary$Min)/as.numeric(PlayerSummary$Max)
PlayerSummary<- PlayerSummary[order(as.numeric(PlayerSummary$PercentWin), decreasing = TRUE),] #order by win%
PlayerSummary %>% kbl(caption = "For Favourite and Hated teams, number of times picked is shown in brackets. If there is tie, the team first alphabetically is shown.") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(3, background = spec_color(as.numeric(PlayerSummary$Mean), option = "plasma")) %>% column_spec(4, background = spec_color(as.numeric(PlayerSummary$Median), option = "C")) %>% column_spec(5, background = spec_color(as.numeric(PlayerSummary$Min), option = "C")) %>% column_spec(6, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(3:6, bold = FALSE, color = "lightgreen")
#make a line plot of everyone's bet odds week by week
plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none"))
Tally<- AccaData[AccaData$Win == 1,] %>% group_by(Player) %>% summarise(Total = sum(Odds)) %>% mutate(Winnings = Total - length(unique(AccaData$Date)))# %>% select(-2)
Tally<- Tally[order(as.numeric(Tally$Winnings), decreasing = TRUE),] #order by win%
#Tally$Winnings <- paste0("\u00A3", Tally$Winnings) #trying to add £ for nice readability but caused issues
Tally[-2] %>% kbl(caption = "What if you went it alone?", align = "lc", table.attr = "style='width:30%;'") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(2, color = "white", background = ifelse(Tally$Winnings < 0, "red", "green"))
knitr::opts_chunk$set(echo = FALSE, tidy = TRUE, message = FALSE, error = FALSE)
library(tidyverse)
AccaData<- read.csv("Results.csv") #import data
AccaData$Date<- as.Date(AccaData$Date, format = "%d/%m/%Y") #format date properly
AccaData$Odds<- as.numeric(format(AccaData$Odds, digits = 3))
#AccaData$Win<- as.factor(AccaData$Win) #wanted to make this a factor but the summary uses sum() which only works on numeric data
AccaData$HomeAway<- as.factor(AccaData$HomeAway)
#AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Odds = prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Date), stat = "identity") + geom_smooth(aes(y = Odds/70), stat = "identity") + theme_classic() + theme(legend.position = "none") + labs(title = "Weekly tracker", subtitle = "Bars for Wins (left axis), line for Total Odds (right axis)") + scale_y_continuous(breaks = 1:11, sec.axis = sec_axis(name = "Odds", transform = ~.*70)) #get summary of each acca. this plot adds a second axis and plots a line for odds. I prefer the second plot for simplicity of figure and code
AccaData %>% group_by(Date) %>% summarise(Wins = sum(Win), Return = 11*prod(Odds)) %>% ggplot(aes(x = Date)) + geom_bar(aes(y = Wins, fill = Return), stat = "identity") + geom_text(aes(label=ceiling(Return), y = Wins),vjust=-0.5) + theme_classic() + labs(title = "Weekly tracker", subtitle = "Total estimated Return (£) from £11 stake shown above bar", caption = "bet365 boost odds on accas so the payout shown may be less than actual return on Doug's betslip") + ylim(c(0,11)) + scale_y_continuous(breaks = 0:11) + theme(panel.grid.major.y = element_line(linetype = 2)) #get summary of each acca
ggplot(data = AccaData, aes(x = Date, y = Win, fill = HomeAway)) + geom_bar(stat = "identity") + theme_classic() + labs(title = "Home/Away tracker") + scale_y_continuous(breaks = 1:11) #bar plot showing split of home or away picks for winning bets
#summary(lm(Win ~ Odds + HomeAway, data = AccaData)) #regression using odds and homeaway as predictors of win
ggplot(data = AccaData) + geom_histogram(aes(x = Odds, group = Win, fill = as.factor(Win)), binwidth = 0.1) + theme_classic() + labs(title = "Histogram of bets made at different odds", fill = "Win") + theme(legend.position = "inside", legend.position.inside = c(0.9,0.9)) + scale_fill_brewer(palette = "Dark2", direction = -1) #histogram showing success of bets at different odds. I think this plot could be a nice way of showing the sweet spot of odds
#best way to present a lot of the data will be as a table
library(kableExtra)
PlayerSummary<- AccaData %>% group_by(Player) %>% summarise(PercentWin = format(sum(Win)/length(Win)*100, digits = 2),
Mean = format(mean(Odds), digits = 3),
Median = format(median(Odds), digits = 3),
Min = format(min(Odds), digits = 3),
Max = format(max(Odds), digits = 3),
PercentHome = format(sum(HomeAway == "H")/length(HomeAway)*100, digits = 2),
DifferentTeams = length(unique(Team)),
FavouriteTeam = paste0(names(which.max(table(Team))), " (",table(Team)[which.max(table(Team))], ")"),
HatedTeam = paste0(names(which.max(table(Against))), " (",table(Against)[which.max(table(Against))], ")"))
#PlayerSummary<- cbind(PlayerSummary, Consistency = as.numeric(PlayerSummary$Min)/as.numeric(PlayerSummary$Max)
PlayerSummary<- PlayerSummary[order(as.numeric(PlayerSummary$PercentWin), decreasing = TRUE),] #order by win%
PlayerSummary %>% kbl(caption = "For Favourite and Hated teams, number of times picked is shown in brackets. If there is tie, the team first alphabetically is shown.") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(3, background = spec_color(as.numeric(PlayerSummary$Mean), option = "plasma")) %>% column_spec(4, background = spec_color(as.numeric(PlayerSummary$Median), option = "C")) %>% column_spec(5, background = spec_color(as.numeric(PlayerSummary$Min), option = "C")) %>% column_spec(6, background = spec_color(as.numeric(PlayerSummary$Max), option = "C")) %>% column_spec(3:6, bold = FALSE, color = "lightgreen")
#make a line plot of everyone's bet odds week by week
plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none"))
Tally<- AccaData[AccaData$Win == 1,] %>% group_by(Player) %>% summarise(Total = sum(Odds)) %>% mutate(Winnings = Total - length(unique(AccaData$Date)))# %>% select(-2)
Tally<- Tally[order(as.numeric(Tally$Winnings), decreasing = TRUE),] #order by win%
#Tally$Winnings <- paste0("\u00A3", Tally$Winnings) #trying to add £ for nice readability but caused issues
Tally[-2] %>% kbl(caption = "What if you went it alone?", align = "lc", table.attr = "style='width:30%;'") %>% kable_classic(html_font = "Cambria") %>% kable_styling("striped") %>% column_spec(2, color = "white", background = ifelse(Tally$Winnings < 0, "red", "green"))
#Multiple ROC curves. One for players, one for home/away, one for stratified odds?
#having difficulty with this. I'm not sure the curves are exactly what I am expecting to show
#this could be an alternative: https://cran.r-project.org/web/packages/COINr/vignettes/sensitivity.html
cor(x = AccaData$Odds, y = AccaData$Win) #correlation between odds and outcome. negative value means that the lower the odds, the more likely a win (which is what would be expected).
library(pROC)
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
names(AccaModel)<- unique(AccaData$Player)
for(player in names(AccaModel)){
#print(player)
print(ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() + labs(title = paste(player))) #ROC curve for model
}
#maybe these ROC curves will work better when more data has been collected?
#print(player)
print(ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() + labs(title = paste(player))) + labs(x = "False Positive Rate", y = "True Positive Rate") #ROC curve for model
#Multiple ROC curves. One for players, one for home/away, one for stratified odds?
#having difficulty with this. I'm not sure the curves are exactly what I am expecting to show
#this could be an alternative: https://cran.r-project.org/web/packages/COINr/vignettes/sensitivity.html
cor(x = AccaData$Odds, y = AccaData$Win) #correlation between odds and outcome. negative value means that the lower the odds, the more likely a win (which is what would be expected).
library(pROC)
AccaModel<- lapply(unique(AccaData$Player), function(x) glm(Win ~ Odds, data = AccaData[which(AccaData$Player == x),])) #regression using odds and homeaway as predictors of win
names(AccaModel)<- unique(AccaData$Player)
for(player in names(AccaModel)){
#print(player)
print(ggroc(roc(AccaModel[[player]][["y"]], predict(AccaModel[[player]], type = "response"))) + geom_abline(intercept = 1, linetype = 2) + theme_classic() + labs(title = paste(player))) + labs(x = "False Positive Rate", y = "True Positive Rate") #ROC curve for model
}
#maybe these ROC curves will work better when more data has been collected?
plotly::highlight(plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none")), on = "plotly_hover", off = "plotly_deselect")
plotly::highlight(plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none")), on = "plotly_click", off = "plotly_relayout")
plotly::highlight(plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none"), tooltip = "Odds"), on = "plotly_click", off = "plotly_relayout")
plotly::highlight(plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none")), on = "plotly_click", off = "plotly_relayout", color = "red")
plotly::highlight(plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none")), on = "plotly_click", off = "plotly_relayout", color = "red", opacityDim = 0.1)
plotly::highlight(plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none"), tooltip = "Player"), on = "plotly_click", off = "plotly_relayout", color = "red", opacityDim = 0.1)
#make a line plot of everyone's bet odds week by week
plotly::highlight(plotly::ggplotly(ggplot(data = AccaData, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none")), on = "plotly_click", off = "plotly_relayout", color = "red", opacityDim = 0.1)
d<- plotly::highlight_key(AccaData, ~Player)
#make a line plot of everyone's bet odds week by week
d<- plotly::highlight_key(AccaData, ~Player)
plotly::highlight(plotly::ggplotly(ggplot(data = d, aes(x = Date, y = Odds, col = Player)) + geom_point(aes(shape = as.factor(Win))) + geom_line() + theme_classic() + geom_hline(yintercept = 2, lty = 2, alpha = 0.5) + labs(title = "Tracker of bet odds over time", caption = "Dotted line represents \"evens\"") + theme(legend.position = "none")), on = "plotly_click", off = "plotly_relayout", color = "red", opacityDim = 0.1)
